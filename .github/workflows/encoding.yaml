name: Encoding

on:
  workflow_dispatch:

defaults:
  run:
    shell: powershell

jobs:
  output:
    runs-on: windows-latest

    steps:
      - name: Echo
        run: |
          echo 'aäoöuü'

      - name: WriteHost
        run: |
          $s = 'aäxöuü'
          $s.length | Out-Host
          Write-Host $s
          $s = "aäxöuü"
          $s = [System.Text.Encoding]::UTF8.GetString([System.Text.Encoding]::default.GetBytes($s))
          $s.length | Out-Host
          Write-Host $s

      - name: Info
        run: |
          $OutputEncoding = [console]::OutputEncoding
          $InputEncoding = [console]::InputEncoding
          echo $OutputEncoding
          echo $InputEncoding

      - name: Env
        env:
          str: "aäoöuü"
        run: |
          $s = $env:str
          $s.length | Out-Host
          Write-Host $s

      - name: EnvSecrets
        env:
          str: ${{ toJson(secrets) }}
        run: |
          $s = $env:str
          $s.length | Out-Host
          Write-Host $s

      - name: Secrets
        run: |
          $s1 = '${{ Secrets.EncStr }}'
          Write-Host "::add-mask::$s1"
          $bytes = New-Object Byte[] ($s1.length)
          for($i=0; $i -lt $s1.length; $i++) { $bytes[$i] = [byte]($s1[$i]) }
          $s2 = [System.Text.Encoding]::UTF8.GetString($bytes)
          $s1.length | Out-Host
          $s2.length | Out-Host
          Write-Host $s1
          Write-Host $s2

      - name: Encode
        run: |
          $Bytes = [System.Text.Encoding]::UTF8.GetBytes('aäoöuü')
          $EncodedText =[Convert]::ToBase64String($Bytes)
          Write-Host $EncodedText

      - name: Decode
        run: |
          $encText = "YcOkb8O2dcO8"
          $DecodedText = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($encText))
          Write-Host $DecodedText
