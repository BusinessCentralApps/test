name: Build image test

on:
  workflow_dispatch:

defaults:
  run:
    shell: PowerShell

jobs:
  update:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Init cache
        uses: satackey/action-docker-layer-caching@v0.0.11
          continue-on-error: true
          with:
            key: bcdocker-{hash}
            restore-keys: |
              bcdocker-

      - name: Build image
        run: |
          $erroractionpreference = "STOP"
          try {
            $alGoHelperPath = "$([System.IO.Path]::GetTempFileName()).ps1"
            $webClient = New-Object System.Net.WebClient
            $webClient.CachePolicy = New-Object System.Net.Cache.RequestCachePolicy -argumentList ([System.Net.Cache.RequestCacheLevel]::NoCacheNoStore)
            $webClient.DownloadFile('https://raw.githubusercontent.com/freddydk/AL-Go-Actions/main/AL-Go-Helper.ps1', $alGoHelperPath)
            . $alGoHelperPath -local
            DownloadAndImportBcContainerHelper
            $token = '${{ secrets.PACKAGES }}'
            Write-Host "Authenticating to GitHub Container Registry"
            $job = start-job -ScriptBlock { Param($username, $token, $registry)
              Write-Output $token | docker login --username $username --password-stdin $registry
            } -ArgumentList '${{ github.actor }}', '${{ github.token }}', 'ghcr.io'
            $job | Wait-Job -ErrorAction SilentlyContinue -WarningAction SilentlyContinue | Out-Null
            $result = Receive-Job -ErrorAction SilentlyContinue -WarningAction SilentlyContinue $job 2> $NULL
            if ($result -ne 'Login Succeeded') {
              throw "Docker Login failed"
            }
            Write-Host "Docker $result"
            $artifactUrl = get-bcartifacturl -country us
            $folder = Join-Path $ENV:GITHUB_WORKSPACE 'buildfolder'
            $imageName = New-BcImage -artifactUrl $artifactUrl -multitenant:$false -imageName 'businesscentral' -additionalLabels @("org.opencontainers.image.source=""https://github.com/$($ENV:GITHUB_REPOSITORY)""")
            docker tag $imageName ghcr.io/${{github.actor}}/$imageName
            docker push ghcr.io/${{github.actor}}/$imageName
          }
          catch {
            Write-Host "::Error::Error building images. Error was $($_.Exception.Message)"
            $host.SetShouldExit(1)
          }

