name: Test2

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - in_progress

defaults:
  run:
    shell: PowerShell

jobs:
  Testjob:
    runs-on: windows-latest

    steps:
      - name: Create Check
        id: CreateCheck
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('${{ github.event.workflow_run.head_sha }}');
            var response = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'CI/CD',
              head_sha: '${{ github.event.workflow_run.head_sha }}',
              status: 'queued',
              details_url: context.serverUrl.concat('/',context.repo.owner,'/',context.repo.repo,'/actions/runs/',context.runId)
            });
            console.log(response);
            core.setOutput('check_run_id', response.data.id);

            do {
              console.log('list suites');
              var response = await github.rest.checks.listSuitesForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: '${{ github.event.workflow_run.head_sha }}'
              })
              console.log(response.data.suites);
              var in_progress = response.data.check_suites((suite) => {
                return suite.status == 'in_progress';
              })
              if (in_progress) {
                console.log('in_progress');
                await new Promise(r => setTimeout(r, 2000));
              }
            }
            while (in_progress);

      - uses: actions/checkout@v2

      - name: Foldername
        id: FolderName
        run: |
          $prfolder = [GUID]::NewGuid().ToString()
          Write-Host "::set-output name=prfolder::$prfolder"

      - name: SUMMARY
        run: |
          Add-Content -path $ENV:GITHUB_STEP_SUMMARY -value "# CHART`n`n``````mermaid`npie`n    title Pie Chart`n    ""Dogs"" : 386`n    ""Cats"" : 85`n    ""Rats"" : 150 `n```````n"

      - name: List Check Suites
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('${{github.event.workflow_run.head_sha}}');
            var response = await github.rest.checks.listSuitesForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
            })
            console.log(response.data.check_suites)

      - name: List Checks
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('${{github.event.workflow_run.head_sha}}');
            var response = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{github.event.workflow_run.head_sha}}',
              filter: 'all',
              status: 'in_progress'
            });
            console.log(response.data.check_runs)

      - name: Update Check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('${{ github.event.workflow_run.head_sha }}');
            console.log('${{ steps.CreateCheck.outputs.check_run_id }}');
            var response = await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ steps.CreateCheck.outputs.check_run_id }},
              status: 'in_progress'
            });
            console.log(response);

      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            var run_id = Number('${{ github.event.workflow_run.id }}');
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: run_id
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == 'Pull_Request_Files';
            })[0];
            var download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip'
            });
            var fs = require('fs');
            fs.writeFileSync('${{ steps.FolderName.outputs.prfolder }}.zip', Buffer.from(download.data));

      - name: Unpack Pull Request Files
        id: ChangedFiles
        run: |
          $ErrorActionPreference = "STOP"
          $location = (Get-Location).path
          $prfolder = '${{ steps.FolderName.outputs.prfolder }}'
          Expand-Archive -Path ".\$prfolder.zip" -DestinationPath ".\$prfolder"
          Remove-Item -Path ".\$prfolder.zip" -force

      - name: Add Pull Request Files
        run: |
          $ErrorActionPreference = "STOP"
          $prfolder = '${{ steps.FolderName.outputs.prfolder }}'
          Get-ChildItem -Path $prfolder -Recurse -File | ForEach-Object {
            $newPath = $_.FullName.Replace("$prfolder\","")
            $newFolder = [System.IO.Path]::GetDirectoryName($newPath)
            if (-not (Test-Path $newFolder)) {
              New-Item $newFolder -ItemType Directory | Out-Null
            }
            Write-Host "Copying $($_.FullName) to $newFolder"
            Copy-Item $_.FullName -Destination $newFolder -Force
          }

      - name: Create Comment
        id: CreateComment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('issue_number'));
            var response = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: '# HELLO WORLD'
            });
            console.log(response);
            console.log(response.data.id);
            core.setOutput('comment_id', response.data.id);

      - name: Test
        uses: freddydk/Test/Action@main
        with:
          s1: 'Freddy'
          s2: 'Kristiansen'

      - name: Sleep
        run: |
          Start-Sleep -seconds 15

      - name: Update Comment
        uses: actions/github-script@v6
        continue-on-error: true
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var fs = require('fs');
            var comment_id = Number('${{ steps.CreateComment.outputs.comment_id }}')
            var response = await github.rest.issues.getComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: comment_id,
            });
            console.log(response);
            console.log(response.data);
            var body = response.data.body
            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: comment_id,
              body: body.concat('### This is an extra line\n'),
            });

      - name: Update Check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('${{ github.event.workflow_run.head_sha }}');
            console.log('${{ steps.CreateCheck.outputs.check_run_id }}');
            var response = await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ steps.CreateCheck.outputs.check_run_id }},
              conclusion: 'success'
            });
            console.log(response);
